# ---
# apiVersion: iam.aws.crossplane.io/v1beta1
# kind: Role
# metadata:
#   name: somerole
# spec:
#   forProvider:
#     assumeRolePolicyDocument: "{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"lambda.amazonaws.com\"}, \"Action\": \"sts:AssumeRole\"}]}"
# ---
apiVersion: iam.aws.crossplane.io/v1beta1
kind: Policy
metadata:
  name: somepolicy
spec:
  forProvider:
    name: somepolicy
    document: "{\"Version\": \"2012-10-17\",\"Statement\": [{ \"Effect\": \"Allow\", \"Action\": \"*:*\", \"Resource\": \"*\"}]}"
# ---
# apiVersion: iam.aws.crossplane.io/v1beta1
# kind: RolePolicyAttachment
# metadata:
#   name: sample-rolepolicyattachment
# spec:
#   forProvider:
#     policyArnRef:
#       name: somepolicy
#     roleNameRef:
#       name: somerole
# ---
# apiVersion: lambda.aws.crossplane.io/v1beta1
# kind: Function
# metadata:
#   name: gofunction
# spec:
#   providerConfigRef:
#     name: default
#   forProvider:
#     region: 'us-east-1'
#     packageType: Zip
#     runtime: 'go1.x'
#     handler: gofunction-amd64-linux
#     environment:
#       variables:
#         CLOUD_REGION: 'us-east-1'
#         CLOUD_ENDPOINT_URL: 'http://localhost:4566'
#     code:
#       s3Bucket: function-bucket
#       s3Key: gofunction-amd64-linux.zip
#     roleRef: 
#       name: somerole
#     tags:
#       Service: gofunction
